

 Learning

1. Using External Fonts

   - I learned how to use the @import method to include external fonts from Google Fonts. 
   This helped improve the aesthetics of my webpage by applying a consistent and visually appealing typography style.

2. Justify Content

   - While styling the navigation bar and footer, I explored the `justify-content` property to align 
   elements such as links and buttons effectively. This enhanced the layout's clarity and balance.

3. Flex-Wrap

   - To handle responsive designs and ensure that card elements fit within the available screen space,
    I utilized the `flex-wrap` property. This ensured the layout remained visually consistent across different devices.

4. Relevance of Attributes

   - I recognized the importance of using relevant attributes like `text-align`, `margin`, and `gap` to 
   fine-tune the design. These attributes helped me achieve a polished and user-friendly design.

 Approach

1. Planning the Layout

   - I started by sketching the layout to decide on the sections and their placement, including the navigation bar, 
   cards, and footer. This helped streamline the coding process.

2. Styling with CSS

   - I used a modular approach to style each section separately. By grouping related CSS properties,
    I ensured that the code was clean and easy to modify.

3. Responsive Design

   - To make the webpage responsive, I applied `flex-wrap` for dynamic elements like the cards section. 
   I also tested the design on different screen sizes to ensure compatibility.

4. FeedbackÂ 

   - After completing the initial version, I reviewed the layout to identify areas for improvement.
    Adjustments were made to spacing, alignment, and hover effects to enhance the overall user experience.

